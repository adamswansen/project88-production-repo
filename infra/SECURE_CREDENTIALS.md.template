# Project88Hub - Secure Credentials Documentation Template

‚ö†Ô∏è **TEMPLATE FILE** ‚ö†Ô∏è  
**This is a template. Copy to `SECURE_CREDENTIALS.md` and fill in actual values.**  
**Never commit the actual `SECURE_CREDENTIALS.md` file to git.**

---

## üîê **Generated Credentials - Day 5 Implementation**

**Generated Date:** [DATE]  
**Generated By:** DevOps Team  
**Purpose:** Day 5 Security & Secrets Management Implementation

---

### **üîë Ansible Vault Password**

**Used for:** Encrypting/decrypting Ansible vault files for both environments

```
Vault Password: [GENERATE_STRONG_PASSWORD_32+_CHARS]
```

**Usage:**
- Same password for both `prod_vault.yml` and `dev_vault.yml`
- Add to GitLab CI variable: `ANSIBLE_VAULT_PASSWORD`
- Used in: All Ansible deployment jobs

---

### **üóÑÔ∏è Database Passwords**

#### **Production Database:**
```
Database: project88_myappdb
User: project88_myappuser
Password: [GENERATE_PRODUCTION_DB_PASSWORD]
```

#### **Development Database:**
```
Database: project88_dev_myappdb  
User: project88_dev_user
Password: [GENERATE_DEVELOPMENT_DB_PASSWORD]
```

**Security Notes:**
- 32+ character passwords with mixed case, numbers, symbols
- Different passwords for prod/dev environments
- Stored encrypted in Ansible vault files

---

### **‚òÅÔ∏è S3 Backup Configuration**

**Existing S3 Setup (Referenced):**
```
Bucket: project88.bu
Region: us-east-1
Access Method: IAM credentials (already configured)
```

**Vault Variables:**
```yaml
vault_s3_bucket: "project88.bu"
vault_s3_region: "us-east-1"
vault_s3_access_key: "[YOUR_AWS_ACCESS_KEY]"
vault_s3_secret_key: "[YOUR_AWS_SECRET_KEY]"
```

---

### **üîê SSH Key Strategy (Separate Keys)**

#### **Production SSH Key:**
```
Key Name: project88-prod-gitlab-ci
Purpose: GitLab CI deployments to production VPS
Algorithm: RSA 4096-bit
```

#### **Development SSH Key:**
```
Key Name: project88-dev-gitlab-ci  
Purpose: GitLab CI deployments to development VPS
Algorithm: RSA 4096-bit
```

**Security Benefits:**
- Separate keys limit blast radius if compromised
- Can rotate keys independently
- Different access levels per environment

---

## üõ°Ô∏è **Security Implementation Steps**

### **Step 1: Generate Strong Passwords**

Use a password manager or secure generator to create:
- Vault password: 32+ characters, mixed case, numbers, symbols
- DB passwords: 32+ characters, different for each environment
- Follow pattern: `Project-Environment-Purpose-Year-Symbols`

### **Step 2: Update Ansible Vault Files**

```bash
cd infra/ansible

# Create new vault password file
echo "[VAULT_PASSWORD]" > .vault_pass
chmod 600 .vault_pass

# Re-encrypt vault files with new password
ansible-vault rekey group_vars/prod_vault.yml --vault-password-file .vault_pass_old --new-vault-password-file .vault_pass
ansible-vault rekey group_vars/dev_vault.yml --vault-password-file .vault_pass_old --new-vault-password-file .vault_pass
```

### **Step 3: Generate SSH Keys**

```bash
# Production SSH key
ssh-keygen -t rsa -b 4096 -C "gitlab-ci-prod@project88hub.com" -f ~/.ssh/project88-prod-gitlab-ci

# Development SSH key
ssh-keygen -t rsa -b 4096 -C "gitlab-ci-dev@project88hub.com" -f ~/.ssh/project88-dev-gitlab-ci

# Set proper permissions
chmod 600 ~/.ssh/project88-*-gitlab-ci
chmod 644 ~/.ssh/project88-*-gitlab-ci.pub
```

### **Step 4: GitLab CI Variables**

**Add to GitLab Project Settings > CI/CD > Variables:**

```
SSH_PRIVATE_KEY_PROD (Protected, Masked)
- Value: Contents of ~/.ssh/project88-prod-gitlab-ci

SSH_PRIVATE_KEY_DEV (Protected, Masked)  
- Value: Contents of ~/.ssh/project88-dev-gitlab-ci

ANSIBLE_VAULT_PASSWORD (Protected, Masked)
- Value: [YOUR_VAULT_PASSWORD]

DEV_VPS_IP (Protected)
- Value: [SET_WHEN_DEV_SERVER_READY]
```

---

## üìã **Password Security Standards**

### **Password Requirements:**
- **Length:** 32+ characters minimum
- **Complexity:** Mixed case, numbers, special characters
- **Pattern:** Project identifier + environment + purpose + year + symbols
- **Uniqueness:** Different passwords for each service/environment

### **Rotation Schedule:**
- **Vault passwords:** Every 6 months
- **Database passwords:** Every 6 months
- **SSH keys:** Every 6 months
- **Emergency rotation:** As needed for security incidents

---

## üö® **Security Protocols**

### **Access Control:**
- ‚úÖ Actual credentials file excluded from git (in .gitignore)
- ‚úÖ Access limited to DevOps team only
- ‚úÖ Passwords never stored in code repositories
- ‚úÖ All credentials encrypted in Ansible vault

### **Usage Guidelines:**
- ‚úÖ Use password manager for generation and storage
- ‚úÖ Use copy/paste to avoid typos
- ‚úÖ Clear clipboard after use
- ‚úÖ Test all credentials before deployment

### **File Management:**
```bash
# Copy template to actual file (one time setup)
cp SECURE_CREDENTIALS.md.template SECURE_CREDENTIALS.md

# Edit with actual values (SECURE_CREDENTIALS.md is gitignored)
nano SECURE_CREDENTIALS.md

# The template can be safely committed
git add SECURE_CREDENTIALS.md.template
```

---

**üîê SECURITY REMINDER: Never commit actual passwords to git**

**Template Version:** 1.0  
**Last Updated:** 2025-07-02